/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthImport } from './routes/_auth'
import { Route as AppImport } from './routes/_app'
import { Route as AppIndexImport } from './routes/_app/index'
import { Route as AuthSignUpSplatImport } from './routes/_auth/sign-up.$'
import { Route as AuthSignInSplatImport } from './routes/_auth/sign-in.$'

// Create/Update Routes

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const AppRoute = AppImport.update({
  id: '/_app',
  getParentRoute: () => rootRoute,
} as any)

const AppIndexRoute = AppIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppRoute,
} as any)

const AuthSignUpSplatRoute = AuthSignUpSplatImport.update({
  id: '/sign-up/$',
  path: '/sign-up/$',
  getParentRoute: () => AuthRoute,
} as any)

const AuthSignInSplatRoute = AuthSignInSplatImport.update({
  id: '/sign-in/$',
  path: '/sign-in/$',
  getParentRoute: () => AuthRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/_app/': {
      id: '/_app/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AppIndexImport
      parentRoute: typeof AppImport
    }
    '/_auth/sign-in/$': {
      id: '/_auth/sign-in/$'
      path: '/sign-in/$'
      fullPath: '/sign-in/$'
      preLoaderRoute: typeof AuthSignInSplatImport
      parentRoute: typeof AuthImport
    }
    '/_auth/sign-up/$': {
      id: '/_auth/sign-up/$'
      path: '/sign-up/$'
      fullPath: '/sign-up/$'
      preLoaderRoute: typeof AuthSignUpSplatImport
      parentRoute: typeof AuthImport
    }
  }
}

// Create and export the route tree

interface AppRouteChildren {
  AppIndexRoute: typeof AppIndexRoute
}

const AppRouteChildren: AppRouteChildren = {
  AppIndexRoute: AppIndexRoute,
}

const AppRouteWithChildren = AppRoute._addFileChildren(AppRouteChildren)

interface AuthRouteChildren {
  AuthSignInSplatRoute: typeof AuthSignInSplatRoute
  AuthSignUpSplatRoute: typeof AuthSignUpSplatRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthSignInSplatRoute: AuthSignInSplatRoute,
  AuthSignUpSplatRoute: AuthSignUpSplatRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof AuthRouteWithChildren
  '/': typeof AppIndexRoute
  '/sign-in/$': typeof AuthSignInSplatRoute
  '/sign-up/$': typeof AuthSignUpSplatRoute
}

export interface FileRoutesByTo {
  '': typeof AuthRouteWithChildren
  '/': typeof AppIndexRoute
  '/sign-in/$': typeof AuthSignInSplatRoute
  '/sign-up/$': typeof AuthSignUpSplatRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_app': typeof AppRouteWithChildren
  '/_auth': typeof AuthRouteWithChildren
  '/_app/': typeof AppIndexRoute
  '/_auth/sign-in/$': typeof AuthSignInSplatRoute
  '/_auth/sign-up/$': typeof AuthSignUpSplatRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '' | '/' | '/sign-in/$' | '/sign-up/$'
  fileRoutesByTo: FileRoutesByTo
  to: '' | '/' | '/sign-in/$' | '/sign-up/$'
  id:
    | '__root__'
    | '/_app'
    | '/_auth'
    | '/_app/'
    | '/_auth/sign-in/$'
    | '/_auth/sign-up/$'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AppRoute: typeof AppRouteWithChildren
  AuthRoute: typeof AuthRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  AppRoute: AppRouteWithChildren,
  AuthRoute: AuthRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_app",
        "/_auth"
      ]
    },
    "/_app": {
      "filePath": "_app.tsx",
      "children": [
        "/_app/"
      ]
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/sign-in/$",
        "/_auth/sign-up/$"
      ]
    },
    "/_app/": {
      "filePath": "_app/index.tsx",
      "parent": "/_app"
    },
    "/_auth/sign-in/$": {
      "filePath": "_auth/sign-in.$.tsx",
      "parent": "/_auth"
    },
    "/_auth/sign-up/$": {
      "filePath": "_auth/sign-up.$.tsx",
      "parent": "/_auth"
    }
  }
}
ROUTE_MANIFEST_END */
